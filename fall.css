:root {
    /* scene variables */
    --ambient-color: rgb(46, 11, 11);
    --widht: 1000px;
    --height: 700px;

    /* fall animation variables */
    --fall-start-top: 0;
    --fall-start-left: 0;
    --fall-start-rx: 0;
    --fall-start-ry: 0;
    --fall-start-rz: 0;
    --fall-start-s: 0.2;
    --fall-end-top: 100%;
    --fall-end-left: 100%;
    --fall-end-rx: 1turn;
    --fall-end-ry: 1turn;
    --fall-end-rz: 1turn;
    --fall-end-s: 0.8;
    --fall-duration: 20s;
    --fall-delay: 0s;
}

body {
    margin: 0;
    font-family: Arial;
    background-color: var(--ambient-color);
}

.container {
    border: 1px solid white;
    width: var(--widht);
    height: var(--height);
    position: absolute;
    overflow: hidden;
}

.background {
    background-image: url(image/forest-fall.jpg);
    background-size: cover;    
} 

.scene-mask-1 {   
   perspective: 300px;

   mask-image: url(image/forest-mask-1.svg);
   mask-size: cover;
}

.leaf {
    width: calc( var(--widht) / 20 );
    height: calc( var(--widht) / 20 ); 
    background-size: contain;
    background-repeat: no-repeat;
    background-position: center;
    position: absolute;  
    top: -30%; 

}

.leaf-1 {
    background-image: url(image/leaf-1.png);  
}
.leaf-2 {
    background-image: url(image/leaf-2.png);  
}
.leaf-3 {
    background-image: url(image/leaf-3.png);  
}
.leaf-4 {
    background-image: url(image/leaf-4.png);  
}
.leaf-5 {
    background-image: url(image/leaf-5.png);  
}

.fall {
    /* apply the animation */
    animation: fall var(--fall-duration) ease-in infinite;   
    animation-fill-mode: forwards;
    animation-delay: var(--fall-delay);
    
}

/* CSS Animations */
@keyframes fall {
    from {
        left: var(--fall-start-left);
        top: var(--fall-start-top);
        transform: rotateX(var(--fall-start-rx)) rotateY(var(--fall-start-ry))  rotateZ(var(--fall-start-rz)) scale(var(--fall-start-s));
    }
    to   {
        left: var(--fall-end-left);
        top: var(--fall-end-top);
        transform: rotateX(var(--fall-end-rx)) rotateY(var(--fall-end-ry))  rotateZ(var(--fall-end-rz)) scale(var(--fall-end-s));
    }
}

